services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nextbrain-postgres-dev
    environment:
      POSTGRES_USER: nextbrain
      POSTGRES_PASSWORD: nextbrain123
      POSTGRES_DB: nextbrain
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./nextBrain-back/prisma/init.sql:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    networks:
      - nextbrain-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nextbrain -d nextbrain"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Ollama for Llama AI
  ollama:
    image: ollama/ollama:latest
    container_name: nextbrain-ollama-dev
    ports:
      - "11434:11434"
    volumes:
      - ollama_dev_data:/root/.ollama
    networks:
      - nextbrain-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/version"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Backend API (Development with hot reload)
  backend-dev:
    build:
      context: ./nextBrain-back
      dockerfile: Dockerfile.dev
    container_name: nextbrain-backend-dev
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgres://nextbrain:nextbrain123@postgres:5432/nextbrain?schema=public
      JWT_SECRET: dev_jwt_secret
      JWT_REFRESH_SECRET: dev_jwt_refresh_secret
      BACKEND_URL: http://localhost:3000
      FRONTEND_URL: http://localhost:8080
      BASE_URL: http://localhost:3000
      # AI Services Configuration
      LLAMA_API_URL: http://ollama:11434/api/chat
      GEMINI_API_KEY: ${GEMINI_API_KEY:-your_gemini_api_key_here}
    ports:
      - "3000:3000"
      - "9229:9229"  # Debug port
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
    networks:
      - nextbrain-network
    volumes:
      - ./nextBrain-back:/app
      - /app/node_modules
      - ./nextBrain-back/uploads:/app/uploads
    command: >
      sh -c "npm install &&
             npx prisma generate &&
             npx prisma migrate deploy &&
             npm run start:dev"

  # Frontend (Development with hot reload)
  frontend-dev:
    build:
      context: ./next-ora
      dockerfile: Dockerfile.dev
    container_name: nextbrain-frontend-dev
    environment:
      VITE_API_URL: http://localhost:3000/api
      VITE_APP_NAME: NextOra
      VITE_APP_VERSION: 1.0.0
    ports:
      - "8080:8080"
    depends_on:
      - backend-dev
    networks:
      - nextbrain-network
    volumes:
      - ./next-ora:/app
      - /app/node_modules

networks:
  nextbrain-network:
    driver: bridge

volumes:
  postgres_dev_data:
  ollama_dev_data:
